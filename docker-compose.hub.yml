version: '3.8'

services:
  backend:
    image: ${DOCKER_USERNAME:-your-dockerhub-username}/wjgl:backend-latest
    container_name: file-management-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_PATH=/app/data/database.sqlite
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-this}
      - UPLOAD_PATH=/app/data/uploads
      - MAX_FILE_SIZE=10737418240
    volumes:
      - file_data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - file_management_network
    labels:
      - "com.docker.compose.project=file-management"
      - "com.fn.nas.managed=true"
      - "com.fn.nas.category=file-management"
      - "com.fn.nas.description=文件管理系统后端服务"

  frontend:
    image: ${DOCKER_USERNAME:-your-dockerhub-username}/wjgl:frontend-latest
    container_name: file-management-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - file_management_network
    labels:
      - "com.docker.compose.project=file-management"
      - "com.fn.nas.managed=true"
      - "com.fn.nas.category=file-management"
      - "com.fn.nas.description=文件管理系统前端界面"

  nginx:
    image: nginx:alpine
    container_name: file-management-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - file_data:/var/www/data:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - file_management_network
    labels:
      - "com.docker.compose.project=file-management"
      - "com.fn.nas.managed=true"
      - "com.fn.nas.category=file-management"
      - "com.fn.nas.description=文件管理系统反向代理"

volumes:
  file_data:
    driver: local

networks:
  file_management_network:
    driver: bridge
